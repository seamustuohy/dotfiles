###########################################################################
## PGP Settings
###########################################################################

# Unlock GPG key in keyring before opening
# NOTE: mutt doesn't ignore empty strings. It interprets empty
# strings as commands. Silenced the error by setting to a user
# defined junk variable.
# Junk variables must be named "my_[text]
set my_junk=`/home/s2e/dotfiles/bin/enable_gpg_keyring.sh 1>/dev/null`

## I love me some efail (i.e. don't prefer inline replies)
# set pgp_replyinline=no
# set pgp_autoinline=no
set crypt_use_gpgme=yes

message-hook '!(~g|~G) ~b"^-----BEGIN\ PGP\ (SIGNED\ )?MESSAGE"' "exec check-traditional-pgp"

## Please try to autodecode others' inline messages
set pgp_auto_decode=yes

set pgp_self_encrypt = yes

## Regexp used against the GPG output: if it matches some line of the output
## then mutt considers the message a good signed one (ignoring the GPG exit code)
set pgp_good_sign="^gpg: Good signature from"

## Mutt uses by default PGP/GPG to sign/encrypt messages.
## If you want to use S-mime instead set the smime_is_default variable to yes:
# set smime_is_default-yes
set crypt_autosmime=no

# Don't sign!
set crypt_autosign=no             # don't automatically sign all outgoing messages
set crypt_replysign=yes           # sign only replies to signed messages
set crypt_autoencrypt=no          # don't automatically encrypt outgoing messages
set crypt_replyencrypt=yes        # encrypt replies to encrypted messages
set crypt_replysignencrypted=no   # don't encrypt and sign replies to encrypted messages
set crypt_verify_sig=yes          # auto-verify signature of a message when opened

# Set this to something comfortable
set pgp_timeout=1800
