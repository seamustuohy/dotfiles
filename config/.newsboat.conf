# This configuration file contains lines in the following form
#     <config-command> <arg1> ....
# The configuration file can also contain comments, which start with the # character and go as far as the end of line.
# If you need to enter a configuration argument that contains spaces, use quotes (") around the whole argument.
#   for example:
#
#
# It possible to integrate the output of external commands into the configuration. The text between two backticks (`) is evaluated as shell command, and its output is put on its place instead. This works like backtick evaluation in Bourne-compatible shells and allows users to use external information from the system within the configuration. Backticks and # characters can be escaped with a backslash (e.g. \` and \#); in that case, they’ll be replaced with literal ` or # in the configuration.
#   for example:
#     `gpg -d ~/dotfiles/private/newsboat/secret_configs.gpg`
#

article-sort-order date
bookmark-cmd "python3 ~/dotfiles/bin/bookmark-rss-feed.py"

browser w3m
prepopulate-query-feeds yes

# TODO: Once you have fixed up your bookmark script to properly bookmark/archive/etc. the sites in different ways then it will have to be made interactive
# bookmark-interactive [yes/no]
#
bookmark-autopilot no

#  If set to yes, then for all feed items with no content but with a link, the link is downloaded and the result used as content instead. This may significantly increase the download times of "empty" feeds. (example: download-full-page yes)
download-full-page no


# How many times newsboat shall try to successfully download a feed before giving up. This is an option to improve the success of downloads on slow and shaky connections such as via a TOR proxy. (example: download-retries 4)
download-retries 3

# The number of seconds newsboat shall wait when downloading a feed before giving up. This is an option to improve the success of downloads on slow and shaky connections such as via a TOR proxy.
download-timeout 30

# If set to yes, then the next-unread, prev-unread and random-unread keys will search in other feeds for unread articles if all articles in the current feed are read. If set to no, then these keys will stop in the current feed. (example: goto-next-feed no)
goto-next-feed no

# http-auth-method (parameters: <method>; default value: any) Set HTTP authentication method. Allowed values: any, basic, digest, digest_ie (only available with libcurl 7.19.3 and newer), gssnegotiate, ntlm and anysafe. (example: http-auth-method digest)
http-auth-method anysafe


# prepopulate-query-feeds (parameters: [yes/no]; default value: no)
# If set to yes, then all query feeds are prepopulated with articles on startup. (example: prepopulate-query-feeds yes)
prepopulate-query-feeds yes

# ssl-verifyhost (parameters: [yes/no]; default value: yes)
# If set to no, skip verification of the certificate’s name against host. (example: ssl-verifyhost no)
ssl-verifyhost yes

# ssl-verifypeer (parameters: [yes/no]; default value: yes)
# If set to no, skip verification of the peer’s SSL certificate. (example: ssl-verifypeer no)
ssl-verifypeer yes


# TODO: Setup Tor
# use-proxy (parameters: [yes/no]; default value: no)
# If set to yes, then the configured proxy will be used for downloading the RSS feeds. (example: use-proxy yes)

# proxy-auth-method (parameters: <method>; default value: any)
#     Set proxy authentication method. Allowed values: any, basic, digest, digest_ie (only available with libcurl 7.19.3 and newer), gssnegotiate,
#     ntlm and anysafe. (example: proxy-auth-method ntlm)

# proxy-auth (parameters: <auth>; default value: n/a)
#     Set the proxy authentication string. (example: proxy-auth user:password)

# proxy-type (parameters: <type>; default value: http)
#     Set proxy type. Allowed values: http, socks4, socks4a, socks5 and socks5h. (example: proxy-type socks5)

# proxy (parameters: <server:port>; default value: n/a)
#     Set the proxy to use for downloading RSS feeds. (Don’t forget to actually enable the proxy with use-proxy yes.) (example: proxy localhost:3128)


# reload-only-visible-feeds (parameters: [yes/no]; default value: no)
# If set to yes, then manually reloading all feeds will only reload the currently visible feeds, e.g. if a filter or a tag is set. (example: reload-only-visible-feeds yes)
reload-only-visible-feeds no


# reload-time (parameters: <number>; default value: 60)
# The number of minutes between automatic reloads. (example: reload-time 120)
reload-time 120

# save-path (parameters: <path-to-directory>; default value: ~/)
# The default path where articles shall be saved to. If an invalid path is specified, the current directory is used. (example: save-path "~/Saved Articles")
save-path "~/library/to_file"


# show-read-feeds (parameters: [yes/no]; default value: yes)
# If set to yes, then all feeds, including those without unread articles, are listed. If set to no, then only feeds with one or more unread articles are list. (example: show-read-feeds no)
#show-read-feeds no


# user-agent (parameters: <string>; default value: "")
# If set to a non-zero-length string, this value will be used as HTTP User-Agent header for all HTTP requests. (example: user-agent "Lynx/2.8.5rel.1 libwww-FM/2.14")
