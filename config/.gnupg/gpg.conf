# Options for GnuPG

personal-digest-preferences SHA512 SHA384 SHA256
cert-digest-algo SHA512
default-preference-list SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP Uncompressed

# Get rid of the copyright notice
no-greeting

# If you have more than 1 secret key in your keyring, you may want to
# uncomment the following option and set your preferred keyid.
default-key 97C3CEFE5F449CC2

# default-recipient is self
default-recipient-self

# always add my key as a recipient to all messages.
encrypt-to 97C3CEFE5F449CC2

# Disable inclusion of the version string in ASCII armored output
no-emit-version

# Disable comment string in clear text signatures and ASCII armored messages
no-comments

# Display long key IDs
keyid-format 0xlong

# List all keys (or the specified ones) along with their fingerprints
with-fingerprint


# tell GnuPG to use utf-8 as the native character set.
# This character set is only used for metadata and not for the actual message
charset utf-8

# https://d.sb/2016/11/gpg-inappropriate-ioctl-for-device-errors
# It turns out this error is due to changes in GnuPG 2.1, which only recently landed in Debian Testing. The error occurs because GnuPG 2.1 by default ignores passphrases passed in via environment variables or stdin, and is trying to show a pinentry prompt. "Inappropriate ioctl for device" is thrown because the Backupninja script is not running through a TTY, so there's no way to actually render the prompt.
# To solve the problem, you need to enable loopback pinentry mode.
use-agent
pinentry-mode loopback

#===========================
# TOFU : Trust on First Use
#===========================
# I'd trust the web of trust if anyone used it correctly
# https://lists.gnupg.org/pipermail/gnupg-users/2015-October/054608.html

# There is no reason to use the bare tofu model
# tofu+pgp degrades back to the tofu if a key is unsigned
trust-model tofu+pgp

# TOFU should not assign positive trust to new keys by default
tofu-default-policy unknown


#===========================
# KEYSERVERS
#===========================

# sks-keyservers are the most broken keyservers ever
# keyserver hkps://hkps.pool.sks-keyservers.net
# keyserver hkp://hkp.pool.sks-keyservers.net
# May First / People Link do good work and have trustworthy tech's
keyserver hkps://keys.mayfirst.org

# I don't care about your preferences and I'm not connecting to your random keyserver
# When using --refresh-keys, if the key in question has a preferred keyserver
# URL, then disable use of that preferred keyserver to refresh the key from
keyserver-options no-honor-keyserver-url

# I wanna see your history
# When searching for a key with --search-keys, include keys that are marked on
# the keyserver as revoked
keyserver-options include-revoked
